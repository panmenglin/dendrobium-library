{
  "表单 Form": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "antd Form form 表单",
    "body": {
      "element": [
        "<Form",
        "  name=\"basic\"",
        "  labelCol={{ span: 8 }}",
        "  wrapperCol={{ span: 16 }}",
        "  initialValues={{ remember: true }}",
        "  onFinish={onFinish}",
        "  onFinishFailed={onFinishFailed}",
        ">",
        "  <Form.Item",
        "    label=\"Username\"",
        "    name=\"username\"",
        "    rules={[{ required: true, message: 'Please input your username!' }]}",
        "  >",
        "    <Input />",
        "  </Form.Item>",
        "",
        "  <Form.Item",
        "    label=\"Password\"",
        "    name=\"password\"",
        "    rules={[{ required: true, message: 'Please input your password!' }]}",
        "  >",
        "    <Input.Password />",
        "  </Form.Item>",
        "",
        "<Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>",
        "  <Checkbox>Remember me</Checkbox>",
        "</Form.Item>",
        "",
        "<Form.Item wrapperCol={{ offset: 8, span: 16 }}>",
        "  <Button type=\"primary\" htmlType=\"submit\">",
        "    Submit",
        "  </Button>",
        "</Form.Item>",
        "</Form>"
      ],
      "method": [
        "onFinish = (values: any) => {",
        "  console.log('Success:', values);",
        "};",
        "",
        "onFinishFailed = (errorInfo: any) => {",
        "  console.log('Failed:', errorInfo);",
        "};"
      ]
    },
    "description": "高性能表单控件，自带数据域管理。包含数据录入、校验以及对应样式。",
    "componentCode": "antd/form",
    "libraryCode": "antd"
  },
  "表单 动态增减 Form": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "antd Form form 表单",
    "body": {
      "element": [
        "<Form form={this.form} name=\"dynamic_form_nest_item\" onFinish={this.onFinish} autoComplete=\"off\">",
        "  <Form.Item name=\"area\" label=\"Area\" rules={[{ required: true, message: 'Missing area' }]}>",
        "    <Select options={areas} onChange={this.handleChange} />",
        "  </Form.Item>",
        "  <Form.List name=\"sights\">",
        "    {(fields, { add, remove }) => (",
        "      <>",
        "        {fields.map(field => (",
        "          <Space key={field.key} align=\"baseline\">",
        "            <Form.Item",
        "              noStyle",
        "              shouldUpdate={(prevValues, curValues) =>",
        "                prevValues.area !== curValues.area || prevValues.sights !== curValues.sights",
        "              }",
        "            >",
        "              {() => (",
        "                <Form.Item",
        "                  {...field}",
        "                  label=\"Sight\"",
        "                  name={[field.name, 'sight']}",
        "                  fieldKey={[field.fieldKey, 'sight']}",
        "                  rules={[{ required: true, message: 'Missing sight' }]}",
        "                >",
        "                  <Select disabled={!form.getFieldValue('area')} style={{ width: 130 }}>",
        "                    {(sights[form.getFieldValue('area')] || []).map(item => (",
        "                      <Option key={item} value={item}>",
        "                        {item}",
        "                      </Option>",
        "                    ))}",
        "                  </Select>",
        "                </Form.Item>",
        "              )}",
        "            </Form.Item>",
        "            <Form.Item",
        "              {...field}",
        "              label=\"Price\"",
        "              name={[field.name, 'price']}",
        "              fieldKey={[field.fieldKey, 'price']}",
        "              rules={[{ required: true, message: 'Missing price' }]}",
        "            >",
        "              <Input />",
        "            </Form.Item>",
        "",
        "            <MinusCircleOutlined onClick={() => remove(field.name)} />",
        "          </Space>",
        "        ))}",
        "",
        "        <Form.Item>",
        "          <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>",
        "            Add sights",
        "          </Button>",
        "        </Form.Item>",
        "      </>",
        "    )}",
        "  </Form.List>",
        "  <Form.Item>",
        "    <Button type=\"primary\" htmlType=\"submit\">",
        "      Submit",
        "    </Button>",
        "  </Form.Item>",
        "</Form>"
      ],
      "property": ["[form] = Form.useForm();"],
      "method": [
        "onFinish = (values) => {",
        "  console.log('Received values of form:', values);",
        "};",
        "",
        "handleChange = () => {",
        "  form.setFieldsValue({ sights: [] });",
        "};"
      ]
    },
    "description": "高性能表单控件，自带数据域管理。包含数据录入、校验以及对应样式。",
    "componentCode": "antd/form",
    "libraryCode": "antd"
  }
}
